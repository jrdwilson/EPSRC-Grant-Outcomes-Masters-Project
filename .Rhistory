# general content: panel name (#lblPanelName) - from html
panel_name <- panel$html %>% html_element("#lblPanelName") %>% html_text()
# general content: panel date (#lblDateOfPanel) - from html
panel_date <- panel$html %>% html_element("#lblDateOfPanel") %>% html_text()
# general content: panel contact (#lblPanelContact) - from html
panel_contact <- panel$html %>% html_element("#lblPanelContact") %>% html_text()
# general content: panel page type - from link
panel_type <- paste(str_match(link,"([A-Z]*)View(.*?).aspx?")[2:3], collapse = '')
panel_details <- tibble(
panel_id = panel_id,
panel_name = panel_name,
panel_date = panel_date,
panel_contact = panel_contact,
panel_type = panel_type,
)
# extract tables
#dgDetails
panel_members <- panel$html %>%
extract_table("#dgDetails", head_row = FALSE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgFullByNum
funded_type1_bynum <- panel$html %>%
extract_table("#dgFullByNum", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgFullByValue
funded_type1_byvalue <- panel$html %>%
extract_table("#dgFullByValue", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgOutlineByNumber
outlines_bynum <- panel$html %>%
extract_table("#dgOutlineByNumber", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgOutlineByValue
outline_byvalue <- panel$html %>%
extract_table("#dgOutlineByValue", log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgDeferredGrants span
deferred_fellowships_grants <- panel$html %>%
extract_elements("#dgDeferredGrants span", log_on = log_on) %>%
tibble(grant_ref = .) %>%
filter(grant_ref != "") %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgGrants
approved_fellowships_grants <- panel$html %>%
extract_table("#dgGrants", log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgSiftByNumber
sift_grants_bynum <- panel$html %>%
extract_table("#dgSiftByNumber", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgSiftByValue
sift_grants_byvalue <- panel$html %>%
extract_table("#dgSiftByValue", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgPanelByNum
funded_type2_bynum <- panel$html %>%
extract_table("#dgPanelByNum", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgPanelByValue
funded_type2_byvalue <- panel$html %>%
extract_table("#dgPanelByValue", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
# pull links
#pnlContent a
panel_rank_links <-  panel$html %>%
extract_elements("#pnlContent a", attr = "href", log_on = log_on) %>%
tibble(href = .) %>%
filter(str_detect(href, "NGBOViewPanelROL.aspx?")) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
# Update the dataframes
dataframes$panel_details_df <- dataframes$panel_details_df %>%
add_row(panel_details)
dataframes$panel_members_df <- dataframes$panel_members_df %>%
add_row(panel_members)
dataframes$funded_type1_bynum_df <- dataframes$funded_type1_bynum_df %>%
add_row(funded_type1_bynum)
dataframes$funded_type1_byvalue_df <- dataframes$funded_type1_byvalue_df %>%
add_row(funded_type1_byvalue)
dataframes$outlines_bynum_df <- dataframes$outlines_bynum_df %>%
add_row(outlines_bynum)
dataframes$outline_byvalue_df <- dataframes$outline_byvalue_df %>%
add_row(outline_byvalue)
dataframes$deferred_fellowships_grants_df <- dataframes$deferred_fellowships_grants_df %>%
add_row(deferred_fellowships_grants)
dataframes$approved_fellowships_grants_df <- dataframes$approved_fellowships_grants_df %>%
add_row(approved_fellowships_grants)
dataframes$sift_grants_bynum_df <- dataframes$sift_grants_bynum_df %>%
add_row(sift_grants_bynum)
dataframes$sift_grants_byvalue_df <- dataframes$sift_grants_byvalue_df %>%
add_row(sift_grants_byvalue)
dataframes$funded_type2_bynum_df <- dataframes$funded_type2_bynum_df %>%
add_row(funded_type2_bynum)
dataframes$funded_type2_byvalue_df <- dataframes$funded_type2_byvalue_df %>%
add_row(funded_type2_byvalue)
dataframes$panel_rank_links_df <- dataframes$panel_rank_links_df %>%
add_row(panel_rank_links)
if (log_on) {
log_print(
str_glue("Successfully extracted panel data from {link} and updated dataframes."),
console = FALSE
)
}
# output the updated dataframes
return(
list(
dataframes = dataframes,
wait = panel$wait
)
)
return(dataframes)
}
get_panel_data <- function(link, dataframes = panel_dataframes, log_on = TRUE){
# Error resistant wrapper function for the wrapped sweet_get_panel_data
out <- tryCatch(
{
sweet_get_panel_data(dataframes, link, log_on = log_on)
},
error = function(cond){
error_panel_links <<- c(error_panel_links, link)
if (log_on) {
log_print(
str_glue(
"Failed to extract panel data and update dataframes due to error.\n
Panel URL: {link}\n
{cond}\n
Failed links: \n{error_panel_links}"),
console = FALSE
)
}
# set a wait time
wait_time <- 15 #seconds
# ensure that the dataframes are passed through without issue and unchanged
return(list(
dataframes = dataframes,
wait = wait_time
))
}
)
# wait
Sys.sleep(out$wait)
# update progress bar
pb$tick()
return(out$dataframes)
}
get_panel_data("NGBOViewPanel.aspx?PanelId=1-4SSWIR", log_on = FALSE)
get_panel_data("NGBOViewPanel.aspx?PanelId=1-4SSWIR", log_on = FALSE)
# update progress bar
try(pb$tick())
pb$finished
pb <- init_bar(bar_len)
pb$finished
panel_dataframes <- list(
panel_details_df = tibble(),
panel_members_df = tibble(),
funded_type1_bynum_df = tibble(),
funded_type1_byvalue_df = tibble(),
outlines_bynum_df = tibble(),
outline_byvalue_df = tibble(),
deferred_fellowships_grants_df = tibble(),
approved_fellowships_grants_df = tibble(),
sift_grants_bynum_df = tibble(),
sift_grants_byvalue_df = tibble(),
funded_type2_bynum_df = tibble(),
funded_type2_byvalue_df = tibble(),
panel_rank_links_df = tibble()
)
error_panel_links <- c()
sweet_get_panel_data <- function(dataframes = panel_dataframes, link, log_on = TRUE){
# wrapped function for collecting data from panel
# get panel html
panel <- get_html(link)
# extract general panel details
# general content: panel id - from link
panel_id <- str_match(link,"PanelId=(.*)"[2])
# general content: panel name (#lblPanelName) - from html
panel_name <- panel$html %>% html_element("#lblPanelName") %>% html_text()
# general content: panel date (#lblDateOfPanel) - from html
panel_date <- panel$html %>% html_element("#lblDateOfPanel") %>% html_text()
# general content: panel contact (#lblPanelContact) - from html
panel_contact <- panel$html %>% html_element("#lblPanelContact") %>% html_text()
# general content: panel page type - from link
panel_type <- paste(str_match(link,"([A-Z]*)View(.*?).aspx?")[2:3], collapse = '')
panel_details <- tibble(
panel_id = panel_id,
panel_name = panel_name,
panel_date = panel_date,
panel_contact = panel_contact,
panel_type = panel_type,
)
# extract tables
#dgDetails
panel_members <- panel$html %>%
extract_table("#dgDetails", head_row = FALSE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgFullByNum
funded_type1_bynum <- panel$html %>%
extract_table("#dgFullByNum", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgFullByValue
funded_type1_byvalue <- panel$html %>%
extract_table("#dgFullByValue", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgOutlineByNumber
outlines_bynum <- panel$html %>%
extract_table("#dgOutlineByNumber", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgOutlineByValue
outline_byvalue <- panel$html %>%
extract_table("#dgOutlineByValue", log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgDeferredGrants span
deferred_fellowships_grants <- panel$html %>%
extract_elements("#dgDeferredGrants span", log_on = log_on) %>%
tibble(grant_ref = .) %>%
filter(grant_ref != "") %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgGrants
approved_fellowships_grants <- panel$html %>%
extract_table("#dgGrants", log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgSiftByNumber
sift_grants_bynum <- panel$html %>%
extract_table("#dgSiftByNumber", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgSiftByValue
sift_grants_byvalue <- panel$html %>%
extract_table("#dgSiftByValue", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgPanelByNum
funded_type2_bynum <- panel$html %>%
extract_table("#dgPanelByNum", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgPanelByValue
funded_type2_byvalue <- panel$html %>%
extract_table("#dgPanelByValue", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
# pull links
#pnlContent a
panel_rank_links <-  panel$html %>%
extract_elements("#pnlContent a", attr = "href", log_on = log_on) %>%
tibble(href = .) %>%
filter(str_detect(href, "NGBOViewPanelROL.aspx?")) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
# Update the dataframes
dataframes$panel_details_df <- dataframes$panel_details_df %>%
add_row(panel_details)
dataframes$panel_members_df <- dataframes$panel_members_df %>%
add_row(panel_members)
dataframes$funded_type1_bynum_df <- dataframes$funded_type1_bynum_df %>%
add_row(funded_type1_bynum)
dataframes$funded_type1_byvalue_df <- dataframes$funded_type1_byvalue_df %>%
add_row(funded_type1_byvalue)
dataframes$outlines_bynum_df <- dataframes$outlines_bynum_df %>%
add_row(outlines_bynum)
dataframes$outline_byvalue_df <- dataframes$outline_byvalue_df %>%
add_row(outline_byvalue)
dataframes$deferred_fellowships_grants_df <- dataframes$deferred_fellowships_grants_df %>%
add_row(deferred_fellowships_grants)
dataframes$approved_fellowships_grants_df <- dataframes$approved_fellowships_grants_df %>%
add_row(approved_fellowships_grants)
dataframes$sift_grants_bynum_df <- dataframes$sift_grants_bynum_df %>%
add_row(sift_grants_bynum)
dataframes$sift_grants_byvalue_df <- dataframes$sift_grants_byvalue_df %>%
add_row(sift_grants_byvalue)
dataframes$funded_type2_bynum_df <- dataframes$funded_type2_bynum_df %>%
add_row(funded_type2_bynum)
dataframes$funded_type2_byvalue_df <- dataframes$funded_type2_byvalue_df %>%
add_row(funded_type2_byvalue)
dataframes$panel_rank_links_df <- dataframes$panel_rank_links_df %>%
add_row(panel_rank_links)
if (log_on) {
log_print(
str_glue("Successfully extracted panel data from {link} and updated dataframes."),
console = FALSE
)
}
# output the updated dataframes
return(
list(
dataframes = dataframes,
wait = panel$wait
)
)
return(dataframes)
}
get_panel_data <- function(link, dataframes = panel_dataframes, log_on = TRUE){
# Error resistant wrapper function for the wrapped sweet_get_panel_data
out <- tryCatch(
{
sweet_get_panel_data(dataframes, link, log_on = log_on)
},
error = function(cond){
error_panel_links <<- c(error_panel_links, link)
if (log_on) {
log_print(
str_glue(
"Failed to extract panel data and update dataframes due to error.\n
Panel URL: {link}\n
{cond}\n
Failed links: \n{error_panel_links}"),
console = FALSE
)
}
# set a wait time
wait_time <- 15 #seconds
# ensure that the dataframes are passed through without issue and unchanged
return(list(
dataframes = dataframes,
wait = wait_time
))
}
)
# wait
Sys.sleep(out$wait)
# update progress bar
if (!pb$finished) {
pb$tick()
}
pbreturn(out$dataframes)
}
get_panel_data("NGBOViewPanel.aspx?PanelId=1-4SSWIR", log_on = FALSE)
panel_dataframes <- list(
panel_details_df = tibble(),
panel_members_df = tibble(),
funded_type1_bynum_df = tibble(),
funded_type1_byvalue_df = tibble(),
outlines_bynum_df = tibble(),
outline_byvalue_df = tibble(),
deferred_fellowships_grants_df = tibble(),
approved_fellowships_grants_df = tibble(),
sift_grants_bynum_df = tibble(),
sift_grants_byvalue_df = tibble(),
funded_type2_bynum_df = tibble(),
funded_type2_byvalue_df = tibble(),
panel_rank_links_df = tibble()
)
error_panel_links <- c()
sweet_get_panel_data <- function(dataframes = panel_dataframes, link, log_on = TRUE){
# wrapped function for collecting data from panel
# get panel html
panel <- get_html(link)
# extract general panel details
# general content: panel id - from link
panel_id <- str_match(link,"PanelId=(.*)"[2])
# general content: panel name (#lblPanelName) - from html
panel_name <- panel$html %>% html_element("#lblPanelName") %>% html_text()
# general content: panel date (#lblDateOfPanel) - from html
panel_date <- panel$html %>% html_element("#lblDateOfPanel") %>% html_text()
# general content: panel contact (#lblPanelContact) - from html
panel_contact <- panel$html %>% html_element("#lblPanelContact") %>% html_text()
# general content: panel page type - from link
panel_type <- paste(str_match(link,"([A-Z]*)View(.*?).aspx?")[2:3], collapse = '')
panel_details <- tibble(
panel_id = panel_id,
panel_name = panel_name,
panel_date = panel_date,
panel_contact = panel_contact,
panel_type = panel_type,
)
# extract tables
#dgDetails
panel_members <- panel$html %>%
extract_table("#dgDetails", head_row = FALSE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgFullByNum
funded_type1_bynum <- panel$html %>%
extract_table("#dgFullByNum", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgFullByValue
funded_type1_byvalue <- panel$html %>%
extract_table("#dgFullByValue", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgOutlineByNumber
outlines_bynum <- panel$html %>%
extract_table("#dgOutlineByNumber", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgOutlineByValue
outline_byvalue <- panel$html %>%
extract_table("#dgOutlineByValue", log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgDeferredGrants span
deferred_fellowships_grants <- panel$html %>%
extract_elements("#dgDeferredGrants span", log_on = log_on) %>%
tibble(grant_ref = .) %>%
filter(grant_ref != "") %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgGrants
approved_fellowships_grants <- panel$html %>%
extract_table("#dgGrants", log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgSiftByNumber
sift_grants_bynum <- panel$html %>%
extract_table("#dgSiftByNumber", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgSiftByValue
sift_grants_byvalue <- panel$html %>%
extract_table("#dgSiftByValue", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgPanelByNum
funded_type2_bynum <- panel$html %>%
extract_table("#dgPanelByNum", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
#dgPanelByValue
funded_type2_byvalue <- panel$html %>%
extract_table("#dgPanelByValue", head_row = TRUE, log_on = log_on) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
# pull links
#pnlContent a
panel_rank_links <-  panel$html %>%
extract_elements("#pnlContent a", attr = "href", log_on = log_on) %>%
tibble(href = .) %>%
filter(str_detect(href, "NGBOViewPanelROL.aspx?")) %>%
mutate(panel_id = panel_id, panel_type = panel_type)
# Update the dataframes
dataframes$panel_details_df <- dataframes$panel_details_df %>%
add_row(panel_details)
dataframes$panel_members_df <- dataframes$panel_members_df %>%
add_row(panel_members)
dataframes$funded_type1_bynum_df <- dataframes$funded_type1_bynum_df %>%
add_row(funded_type1_bynum)
dataframes$funded_type1_byvalue_df <- dataframes$funded_type1_byvalue_df %>%
add_row(funded_type1_byvalue)
dataframes$outlines_bynum_df <- dataframes$outlines_bynum_df %>%
add_row(outlines_bynum)
dataframes$outline_byvalue_df <- dataframes$outline_byvalue_df %>%
add_row(outline_byvalue)
dataframes$deferred_fellowships_grants_df <- dataframes$deferred_fellowships_grants_df %>%
add_row(deferred_fellowships_grants)
dataframes$approved_fellowships_grants_df <- dataframes$approved_fellowships_grants_df %>%
add_row(approved_fellowships_grants)
dataframes$sift_grants_bynum_df <- dataframes$sift_grants_bynum_df %>%
add_row(sift_grants_bynum)
dataframes$sift_grants_byvalue_df <- dataframes$sift_grants_byvalue_df %>%
add_row(sift_grants_byvalue)
dataframes$funded_type2_bynum_df <- dataframes$funded_type2_bynum_df %>%
add_row(funded_type2_bynum)
dataframes$funded_type2_byvalue_df <- dataframes$funded_type2_byvalue_df %>%
add_row(funded_type2_byvalue)
dataframes$panel_rank_links_df <- dataframes$panel_rank_links_df %>%
add_row(panel_rank_links)
if (log_on) {
log_print(
str_glue("Successfully extracted panel data from {link} and updated dataframes."),
console = FALSE
)
}
# output the updated dataframes
return(
list(
dataframes = dataframes,
wait = panel$wait
)
)
return(dataframes)
}
get_panel_data <- function(link, dataframes = panel_dataframes, log_on = TRUE){
# Error resistant wrapper function for the wrapped sweet_get_panel_data
out <- tryCatch(
{
sweet_get_panel_data(dataframes, link, log_on = log_on)
},
error = function(cond){
error_panel_links <<- c(error_panel_links, link)
if (log_on) {
log_print(
str_glue(
"Failed to extract panel data and update dataframes due to error.\n
Panel URL: {link}\n
{cond}\n
Failed links: \n{error_panel_links}"),
console = FALSE
)
}
# set a wait time
wait_time <- 15 #seconds
# ensure that the dataframes are passed through without issue and unchanged
return(list(
dataframes = dataframes,
wait = wait_time
))
}
)
# wait
Sys.sleep(out$wait)
# update progress bar
if (!pb$finished) {
pb$tick()
}
return(out$dataframes)
}
get_panel_data("NGBOViewPanel.aspx?PanelId=1-4SSWIR", log_on = FALSE)
init_bar <- function(bar_length){
bar <- progress_bar$new(
format = "[:bar] :current/:total -:percent complete - :elapsedfull - eta = :eta \n",
total = bar_length
)
return(bar)
}
View(extract_table)
log_open("../logs/gow/test_log.log")
log_close()
get_panel_data("NGBOViewPanel.aspx?PanelId=1-4SSWIR", dataframes = panel_dataframes, log_on = FALSE)
for (i in 1:bar:len) {
if (!pb$finished) {
pb$tick()
}
}
for (i in 1:bar_len) {
if (!pb$finished) {
pb$tick()
}
}
