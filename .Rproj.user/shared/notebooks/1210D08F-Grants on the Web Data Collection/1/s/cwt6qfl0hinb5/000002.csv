"0","extract_table <- function(html, css_selector, head_row = FALSE, log_on = TRUE){"
"0","  out <- tryCatch("
"0","    {"
"0","      html_out <- html %>% "
"0","        html_element(css_selector) %>% "
"0","        html_table(header = head_row)"
"0","      "
"0","      if (log_on) {"
"0","        log_print(str_glue(""Successfully extracted {css_selector} table""), console = FALSE)"
"0","      }"
"0","      "
"0","      html_out"
"0","    },"
"0","    error=function(cond){"
"0","      if (log_on) {"
"0","        log_print(str_glue(""Unsuccessfully extracted {css_selector} table. \n{cond}""), console = FALSE)"
"0","      }"
"0","      return(tibble())"
"0","    }"
"0","  )"
"0","  return(out)"
"0","}"
"0",""
"0","extract_elements <- function(html, css_selector, attr = """", log_on = TRUE){"
"0","  out <- tryCatch("
"0","    {"
"0","      if (attri == """") {"
"0","        out <- html %>% "
"0","          html_elements(css_selector) %>% "
"0","          html_text(trim = TRUE) "
"0","      } else {"
"0","        out <- html %>% "
"0","          html_elements(css_selector) %>%"
"0","          html_attr(attr)"
"0","      }"
"0","      "
"0","      "
"0","      # Detect if logging is on for this function (on by default)"
"0","      if (log_on) {"
"0","        log_print("
"0","          str_glue(""Successfully extracted {css_selector} elements""), "
"0","          console = FALSE, "
"0","          hide_notes = TRUE,"
"0","        )"
"0","      }"
"0","      # The trycatch returns the last expression so we need to ensure that it is returned"
"0","      out"
"0","    },"
"0","    error=function(cond){"
"0","      if (log_on) {"
"0","        log_print("
"0","          str_glue(""Unsuccessfully extracted {css_selector} elements. \n{cond}""), "
"0","          console = FALSE,"
"0","          hide_notes = TRUE,"
"0","        )"
"0","      }"
"0","      return(tibble())"
"0","    }"
"0","  )"
"0","  return(out)"
"0","}"
