"0","get_ranked_list <- function(link, dataframes = panel_dataframes, log_on = TRUE, errors = c()){"
"0","  # Error resistant wrapper function for the wrapped sweet_get_panel_data"
"0","  out <- tryCatch("
"0","    {"
"0","      spacer <- ""=========================================================================\n"""
"0","      "
"0","      if (log_on) {"
"0","        log_print("
"0","          str_glue(""{spacer}\nStarting data extraction from {link}.""), "
"0","          console = FALSE,"
"0","          hide_notes = TRUE"
"0","        )"
"0","      }"
"0","      sweet_get_ranked_list(link, dataframes = dataframes, log_on = log_on, errors = errors)"
"0","    },"
"0","    error = function(cond){"
"0","      new_errors <- c(errors, link)"
"0","      "
"0","      if (log_on) {"
"0","        log_print("
"0","          str_glue("
"0","          ""Failed to extract data and update dataframes due to error.\nURL: {link}\n{cond}\nFailed links:""),"
"0","          console = FALSE,"
"0","          hide_notes = TRUE"
"0","        )"
"0","        log_print("
"0","          errors,"
"0","          console = FALSE,"
"0","          hide_notes = TRUE"
"0","        )"
"0","      }"
"0","      # set a wait time"
"0","      wait_time <- 15 #seconds"
"0","      "
"0","      # ensure that the dataframes are passed through without issue and unchanged"
"0","      return("
"0","        list("
"0","          dataframes = dataframes,"
"0","          wait = wait_time,"
"0","          errors = new_errors"
"0","        )"
"0","      )"
"0","    }"
"0","  )"
"0","  # wait"
"0","  Sys.sleep(out$wait)"
"0","  # update progress bar if it has been created and has not finished"
"0","  if (exists('pb')){"
"0","    if (!pb$finished) {"
"0","    pb$tick()"
"0","    }"
"0","  }"
"0","  if (log_on) {"
"0","    log_print("
"0","      str_glue(""Finished data extraction from {link}.""), "
"0","      console = FALSE,"
"0","      hide_notes = FALSE"
"0","    )"
"0","  }"
"0","  return(out)"
"0","  "
"0","}"
